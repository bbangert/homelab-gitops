---
# yaml-language-server: $schema=https://raw.githubusercontent.com/ishioni/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik
spec:
  chart:
    spec:
      chart: authentik
      version: 2025.10.0
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
  interval: 30m
  values:
    global:
      deploymentAnnotations:
        secret.reloader.stakater.com/reload: &secret authentik-secret
      envFrom:
        - secretRef:
            name: *secret
    server:
      replicas: 1
      initContainers:
        init-db:
          image:
            repository: ghcr.io/onedr0p/postgres-init
            tag: 16
          envFrom:
            - secretRef:
                name: *secret
      resources:
        requests:
          cpu: 50m
          memory: 500Mi
        limits:
          memory: 800Mi
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
      ingress:
        enabled: true
        annotations:
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        ingressClassName: external
        hosts:
          - &host "auth.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - *host
      volumes:
        - name: custom-assets
          configMap:
            name: authentik-theme
      volumeMounts:
        - name: custom-assets
          mountPath: /web/dist/assets/images/groovie-melting.png
          subPath: groovie-melting.png
        - name: custom-assets
          mountPath: /web/dist/assets/images/flow_background.jpg
          subPath: groovie-background.jpg
        - name: custom-assets
          mountPath: /web/dist/custom.css
          subPath: custom.css
    worker:
      replicas: 1
      resources:
        requests:
          cpu: 50m
          memory: 500Mi
        limits:
          memory: 1200Mi
    authentik:
      log_level: debug
      redis:
        host: dragonfly.database.svc.cluster.local
      error_reporting:
        enabled: false
    prometheus:
      rules:
        enabled: true
